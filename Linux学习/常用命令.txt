#pwd   显示当前目录
#cd    打开指定目录
#ls   列出文件和目录
#ls -a  显示隐藏文件
#ls -l  显示长列表格式
#mkdir   创建文件夹 
#mkdir -p   文件夹不存在就创建 
#rmkdir　　删除文件夹
#rm -rf    删除文件和目录，包括子目录  -f  强制删除   -r  递归删除
#cp -r  dir1 dir2   递归复制文件(复制子目录信息)
#touch          创建空文件
#ln -s 源目录        建立符号链接
#ln -s /etc/inittab inittab  【inittab指向实际目录/etc/inittab】
tab 补全命令    tab  双击，列出补全命令
#more   显示文件内容 带分页
#less    显示文件内容带分页
# |      管道命令
#ls -l  | more   将ls -l 输出的结果交给more命令【分页显示文件】

管道命令
把上一个命令的结果交给 | 后的命令处理


#grep -n "aaa"  hello.java   grep搜索命令【在hello.java 文件查询 aaa 字符】-n 显示行数
#man nginx   man帮助手册 相当于-help
#find /app -name jar     搜索命令【在/app目录下搜索名称为jar的文件和文件夹】
#whereis nginx     显示所有包含nginx文件的目录

重定向命令
>  把结果输出到某个文件
#ls -l > kkk.java    如果没有kkk.java 就创建，有就覆盖
>>  把结果追加到某个文件，不覆盖






- 用户组的管理  
- 磁盘管理
- 文件目录的打包及压缩   
- 软件安装   
- yum安装 lamp

下载 方式 

curl  -O    

wget  -c  

http://mirrors.hust.edu.cn/apache/httpd/         http://nodejs.cn/download/

别名

    vim /root/.bashrc  
    alias l='ls -al'   # l等号之间没有空格  后边是单引号
    
    保存退出       
    
    source /root/.bashrc   # 让配置 立即生效  
    
    
    #临时别名  
    
    alias m='mkdir -p'

更改目录及文件所属的用户 和组

    chown   
         -R #递归修改子目录及文件         
    chown -R yinshan:yinshan /test   

查看文件内容的方式

    cat 文件名    #将文件内容全部显示  需要滚动条查看   
    more 文件名  #空格 分页   回车键   换行   q键退出    
    head -n 10 文件名 #显示文件前10行内容 
    tail -n 10 文件名 #显示文件后10行内容  
    tail -f 文件名 #动态显示文件后面的内容   
    watch -n 1  index.php    #每秒刷新一次内容  
    |  管道符    #上一个的输出 作为下一个的输入  cat /etc/passwd 显示所有的内容| grep yinshan 
    从所有的内容中 匹配yinshan         
    history  #显示历史命令  
    !52  #自动执行历史命令第52条命令 

Linux用户管理

    添加用户  useradd  用户名
    
         
    删除用户 userdel 用户名  此时只是删除 /etc/passwd  一条记录 home 目录下 用户名为命名的目录还在 
    userdel  -r 用户名   删除 /etc/passwd 记录的同时 删除 home 目录下  用户名为命名的目录  
    
    修改密码  passwd  用户名  不写用户名 默认 root   
    
    切换 用户   su 用户名  不写  默认切换到root  
    
    修改用户名  usermod  -l 新用户名   原来的用户名  
    
    
    添加完用户  会在  /home 目录下 生成一个  以 用户名为命名的 目录    
    
    还会在  /etc/passwd 下面 产生一条记录    
    
    
    
    
    root:x:0:0:root:/root:/bin/bash
    bin:x:1:1:bin:/bin:/sbin/nologin
    daemon:x:2:2:daemon:/sbin:/sbin/nologin
    sync:x:5:0:sync:/sbin:/bin/sync
    shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown
    halt:x:7:0:halt:/sbin:/sbin/halt
    mail:x:8:12:mail:/var/spool/mail:/sbin/nologin
    yinshanshan:x:500:501::/home/yinshanshan:/bin/bash
    
    
    第一部分: yinshanshan 用户名
    第二部分:x 用户的密码   
    第三部分:用户的id  
    第四部分:组id  
    第五部分: 空白  注释  
    第六部分: /home/yinshanshan 表示用户的家目录  
    第七部分: /bin/bash  用户具备脚本执行的权限    简单说 这个用户可以登录 /sbin/nologin 用户不具备脚本执行的权限   也就是 用户不可以登录     
    
    
    添加一个用户  不让他 登录   
    useradd test -s /sbin/nologin  





用户组管理

    groupadd 组名  #添加用户组    
    #会在  /etc/group下面生成一条记录    
    wenhai:x:503:    
    #组名   组密码  组id 
    groupdel 组名 # 删除组     
    groupmod -n 新组名  原来的组名   #修改组名
    
    
    
    usermod  -g  用户组   用户名  #将用户从原来的组  加入到新的组 
    useradd -g 用户组  用户名    #添加用户 直接把他加入到指定的组里   
    
    
    gpasswd  -a 用户名  组名    #将用户加入到临时的组中  主组保持不变   
    gpasswd  -d 用户名  组名    #将用户从临时组中删除      



用户用户组密码配置文件

    /etc/passwd 
    /etc/group 
    /etc/shadow 



磁盘管理

    sd卡 storage  disk     
    HD Hard Disk  

- df
- du
- fdisk  

df  列出整体磁盘的使用量

    df  默认以 kb为单位 
        -a  列出所有文件系统 
        -h 以最佳阅读体验查看  
        -m 以MB为单位 
        -k 以KB为单位

du 查看文件及目录  对磁盘的占用情况

    du   默认 以KB 为单位  
        -a  列出所有文件系统 
        -h 以最佳阅读体验查看  
        -m 以MB为单位 
        -k 以KB为单位





fdisk  就是一个分区工具   好比windows中的   diskmgmt.msc

    fdisk -l 列出所有的分区      硬盘 先分区再格式化  然后挂载 才能真正的使用 也就是 df -h 能看到这个分区才能真正被使用 
    
    
    1.fdisk /dev/sdb   #这里是在虚拟机上再次分盘得到的
    m 获取帮助
    n 新建一个分区   
    d 删除一个分区 
    w 保存更改 退出   
    q 不保存退出 
    p 打印分区表 
    
    
    n     
    	extend  扩展分区
    	primary 主分区 
    	
    p  
    	选择分区号   会有提示  
    	选择磁道   也会有提示   
    +10G 
    
    w  保存   
    
    
    fdisk -l  会发现一个 /dev/sdb1     
    
    
    2.对新建好的分区 格式化   
    
    
    文件系统类型   
    	windows  NTFS  
    	Linux ext4  
    
    mke2fs -t ext4 /dev/sdb1   
    
    
    3. 挂载  
    	mkdir -p /home/guazai  
        
        mount -t ext4 /dev/sdb1 /home/guazai       
        
        df -h 查看一下  发现有了  /dev/sdb1    
        
        如果提示  被占用  这时候  退出guazai这个目录 回到 home 目录下    
        
        umount /home/guazai   #取消挂载   
        
         以上是 临时的挂载    关机重启肯定丢失  
         
     4.永久的挂载    
        vim /etc/fstab
    	/dev/sdb1               /home/guazai            ext4    defaults        0 0
        新分区				     挂载的位置  			 文件系统类型   默认挂载参数    
        0  表示 是否开启 dump 备份       mysqldump 0表示 不开启 1表示开启 
        0  表示 是否开机检查磁盘 	0 不检查  1 表示检查次磁盘   
        
        mount -a  表示让挂载立即生效  
        umount /home/guazai  取消挂载   



查看内存

    free   
         -h 以最佳阅读体验阅读   
         swap  交换分区        



压缩 解压缩

zip rar 7zip cab iso    windows 压缩类型



zip gz bz2 xz  Linux 压缩类型 



gz  是gzip 的简称

    yum -y install  gzip 
    gzip -h  #查看帮助
    gzip 文件1 文件2 文件3 #可以批量压缩   源文件不存在了  生成.gz的压缩文件     
    -f 强制压缩 
    gzip 不能压缩目录   
    gzip -d 1.php.gz 2.php.gz  #支持批量解压缩   
    

bz2    bzip2 的简称

    bzip2 -z 1.php 2.php 3.php# 可以批量压缩   源文件不存在了  生成.bz2的压缩文件
    bzip2 -h #查看帮助    
    bzip2 -d 1.php.bz2 2.php.bz2 3.php.bz2       #支持批量解压缩   
    
    不支持压缩目录   





xz

    xz -h #查看帮助  
    xz -z  文件1 文件2 文件3 文件4  支持批量压缩   #源文件也不存在  生成.xz的压缩文件  也不支持压缩目录 
    xz -d 1.php.xz 2.php.xz  



打包 解包

    tar 
       -c 打包   
       -x 解包
       -f 制定文件名  
       -t 列出归档内容 
       -v 可视化输出   
       
    tar -cvf kangbazi.tar  1.php 2.php 3.php test #可以打包目录  也可以打包文件   源文件还在    
    
    tar -xvf kangbazi.tar  #解包  
    
    tar -tf kangbazi.tar  #查看包里的内容   



gz的打包并压缩

    tar 
    	-z
     tar -zcvf kangbazi.tar.gz 4.php 5.php 6.php haha   打包并压缩   生成一个  kangbazi.tar.gz  源文件还存在 



gz的解包并解压缩



    tar 
    	-z
    	tar -zxvf kangbazi.tar.gz   #源文件还在  

 

bz2的 打包并压缩



    tar 
    	-j
    	 tar -jcvf kangbazi.tar.bz2 4.php 5.php 6.php haha   打包并压缩   生成一个  kangbazi.tar.bz2  源文件还存在 



bz2的解包并解压缩



    tar 
    	-j
    	tar -jxvf kangbazi.tar.bz2   #源文件还在  



xz的 打包并压缩

    tar 
    	-J
    	tar -Jcvf test2.tar.xz 4.php 5.php 6.php haha  打包并压缩   生成一个  test2.tar.xz  源文件还存在 



xz的解包并解压缩

    tar 
        -J  
        tar -Jxvf test2.tar.xz 

 

wget 递归扒站

    -c  断点续传   
    -r,  指定递归下载。
    -k  将页面中的连接转化为相对连接也就是本地链接   
    -p, 下载所有用于显示 HTML 页面的图片之类的元素。
    -np, 不追溯至父目录。
    -nc, 不要重复下载已存在的文件



软件安装

    1.rpm 安装  
    2.yum 安装  
    3.源码编译安装   

rpm安装 redhat package management  .rpm

优点: 只需要下载 rpm包即可

缺点:  有依赖关系     安装 2 软件 必须安装 1

    rpm -qa 列出所有已经安装的rpm包  
    
    i386 i586 i686 32位 
    x86_64 64位
    
    rpm -qa | grep vim  
    vim-minimal-7.4.629-5.el6.x86_64   4 
    vim-enhanced-7.4.629-5.el6_8.1.x86_64  2 
    vim-common-7.4.629-5.el6_8.1.x86_64   3
    vim-filesystem-7.4.629-5.el6_8.1.x86_64  1   
    
    http://rpm.pbone.net/index.php3/stat/4/idpl/30823637/dir/scientific_linux_6/com/vim-filesystem-7.4.629-5.el6.x86_64.rpm.html
    rpm -i 安装  
        -v 视图显示
        -h 显示安装进度 
        
        
    rpm -ivh ftp://ftp.pbone.net/mirror/ftp.scientificlinux.org/linux/scientific/6.8/x86_64/os/Packages/vim-filesystem-7.4.629-5.el6.x86_64.rpm    #安装  
    rpm -e 卸载   
    rpm -U 包名 更新rpm 包  
    rpm -ql tree  查询tree 安装在哪里
    rpm -qi tree 查询tree 安装包的信息   
    rpm -qa | wc -l #列出一共安装有多少个rpm包 



yum 安装

好比手机 应用商店   App Store   360 软件管家    管理软件   

自动安装   如果rpm 有依赖关系  自动的下载以来的软件     自动解决依赖关系  

vim 需要安装四个rpm 包   yum自动下载所有相关的  

    yum install  会有提示  
    yum -y install 不提示  
    yum -y groupinstall   组安装  
    yum -y remove 软件名   移除软件   
    yum -y update 软件名 更新软件  
    yum -y search 软件包名  查询软件包的信息   
    yum -y install  vim
    
    yum -y install tree --downloadonly --downloaddir=/tmp   只下载 不安装  制定安装的目录 


时间
    linux时间有两个  系统时间 date 和 硬件时间  clock
	
date
   %Y  年    %m  月    %d  日    %H  时    %m  分   %S  秒
   date +%Y
   
   
   
   
   
   
   
   
   
   
   
   
   
#file /app   文件内部类型
#which nginx 查找nginx的所在目录
#rename   重命名文件
#cd -   在当前目录和上次目录中间进行切换
#cd ~   切换到当前用户的家目录
#cd ~yanglf  切换到指定用户的家目录
#head a.txt   显示a文件的头部信息
#tail a.txt   显示a文件的尾部信息
#wall 'hello'  向其他终端发消息


#uname  显示操作系统相关信息
#hostname 显示设置主机名
#dmesg   显示开机信息 用于开机诊断
#uptime   显示系统运行时间和负载
#stat app  显示文件的状态
#du    计算磁盘空间使用情况。 
#df    报告文件系统磁盘空间的使用情况。 
#top   实时显示系统资源使用情况。 
#free   查看系统内存。 
#date   显示与设置系统时间。 
#cal   查看日历等时间信息。



搜索文件

#which  nginx    查找二进制命令，按环境变量 PATH 路径查找。 
#find / -name nginx  从磁盘遍历查找文件或目录。 
#whereis nginx   查找二进制命令，按环境变量 PATH 路径查找。 
locate从数据库 (/var/lib/mlocate/mlocate.db) 查找命令，使用 updatedb 更新库。



用户管理命令（10 个）
useradd添加用户。 
usermod修改系统已经存在的用户属性。 
userdel删除用户。 
groupadd添加用户组。 
passwd修改用户密码。 
chage修改用户密码有效期限。 
id查看用户的 uid,gid 及归属的用户组。 
su切换用户身份。 
visudo编辑 / etc/sudoers 文件的专属命令。 
sudo以另外一个用户身份（默认 root 用户）执行事先在 sudoers 文件允许的命令。



基础网络操作命令（11 个）
telnet使用 TELNET 协议远程登录。 
ssh使用 SSH 加密协议远程登录。 
scp全拼 secure copy，用于不同主机之间复制文件。 
wget命令行下载文件。 
ping测试主机之间网络的连通性。 
route显示和设置 linux 系统的路由表。 
ifconfig查看、配置、启用或禁用网络接口的命令。 
ifup启动网卡。 
ifdown关闭网卡。 
netstat查看网络状态。 
ss查看网络状态。



深入网络操作命令（9 个）
nmap网络扫描命令。 
lsof全名 list open files，也就是列举系统中已经被打开的文件。 
mail发送和接收邮件。 
mutt邮件管理命令。 
nslookup交互式查询互联网 DNS 服务器的命令。 
dig查找 DNS 解析过程。 
host查询 DNS 的命令。 
traceroute追踪数据传输路由状况。 
tcpdump命令行的抓包工具。



有关磁盘与文件系统的命令（16 个）
mount挂载文件系统。 
umount卸载文件系统。 
fsck检查并修复 Linux 文件系统。 
dd转换或复制文件。 
dumpe2fs导出 ext2/ext3/ext4 文件系统信息。 
dump ext2/3/4 文件系统备份工具。 
fdisk磁盘分区命令，适用于 2TB 以下磁盘分区。 
parted磁盘分区命令，没有磁盘大小限制，常用于 2TB 以下磁盘分区。 
mkfs格式化创建 Linux 文件系统。 
partprobe更新内核的硬盘分区表信息。 
e2fsck检查 ext2/ext3/ext4 类型文件系统。 
mkswap创建 Linux 交换分区。 
swapon启用交换分区。 
swapoff关闭交换分区。 
sync将内存缓冲区内的数据写入磁盘。 
resize2fs调整 ext2/ext3/ext4 文件系统大小。



系统权限及用户授权相关命令（4 个）
chmod改变文件或目录权限。 
chown改变文件或目录的属主和属组。 
chgrp更改文件用户组。 
umask显示或设置权限掩码。



查看系统用户登陆信息的命令（7 个）
whoami显示当前有效的用户名称，相当于执行 id -un 命令。 
who显示目前登录系统的用户信息。 
w显示已经登陆系统的用户列表，并显示用户正在执行的指令。 
last显示登入系统的用户。 
lastlog显示系统中所有用户最近一次登录信息。 
users显示当前登录系统的所有用户的用户列表。 
finger查找并显示用户信息。



内置命令及其它（19 个）
echo打印变量，或直接输出指定的字符串 
printf将结果格式化输出到标准输出。 
rpm管理 rpm 包的命令。 
yum自动化简单化地管理 rpm 包的命令。 
watch周期性的执行给定的命令，并将命令的输出以全屏方式显示。 
alias设置系统别名。 
unalias取消系统别名。 
date查看或设置系统时间。 
clear清除屏幕，简称清屏。 
history查看命令执行的历史纪录。 
eject弹出光驱。 
time计算命令执行时间。 
nc功能强大的网络工具。 
xargs将标准输入转换成命令行参数。 
exec调用并执行指令的命令。 
export设置或者显示环境变量。 
unset删除变量或函数。 
type用于判断另外一个命令是否是内置命令。 
bc命令行科学计算器



系统管理与性能监视命令 (9 个)
chkconfig管理 Linux 系统开机启动项。 
vmstat虚拟内存统计。 
mpstat显示各个可用 CPU 的状态统计。 
iostat统计系统 IO。 
sar全面地获取系统的 CPU、运行队列、磁盘 I/O、分页（交换区）、内存、 CPU 中断和网络等性能数据。 
ipcs用于报告 Linux 中进程间通信设施的状态，显示的信息包括消息列表、共享内存和信号量的信息。 
ipcrm用来删除一个或更多的消息队列、信号量集或者共享内存标识。 
strace用于诊断、调试 Linux 用户空间跟踪器。我们用它来监控用户空间进程和内核的交互，比如系统调用、信号传递、进程状态变更等。 
ltrace命令会跟踪进程的库函数调用, 它会显现出哪个库函数被调用。



关机 / 重启 / 注销和查看系统信息的命令（6 个）
shutdown关机。 
halt关机。 
poweroff关闭电源。 
logout退出当前登录的 Shell。 
exit退出当前登录的 Shell。 
Ctrl+d退出当前登录的 Shell 的快捷键。



进程管理相关命令（15 个）
bg将一个在后台暂停的命令，变成继续执行 （在后台执行）。 
fg将后台中的命令调至前台继续运行。 
jobs查看当前有多少在后台运行的命令。 
#kill  -9 87657       终止进程。 
#killall  -9 nginx    通过进程名终止进程。 
pkill通过进程名终止进程。 
crontab定时任务命令。 
ps显示进程的快照。 
pstree树形显示进程。 
nice/renice调整程序运行的优先级。 
nohup忽略挂起信号运行指定的命令。 
pgrep查找匹配条件的进程。 
runlevel查看系统当前运行级别。 
init切换运行级别。 
service启动、停止、重新启动和关闭系统服务，还可以显示所有系统服务的当前状态
#id  显示当前用户所有信息
#id yanglf  显示指定用户信息
#users   显示当前登录用户
#who    显示当前正在系统中的所有用户名字，使用终端设备号，注册时间。
#whoami   显示当前有效的用户名称，相当于执行
wc [option] filename   统计文件中的文件行数、字数和字符数。 
   -l 统计文件的行数 
   -w 统计文件的单词数 
   -c 统计文件的字符数 
#mailx  查看自己的电子邮件
    delete  删除 
    next    下一个 
    quit    退出 
    reply   回复
#history  回忆命令
#bc（计算器）scale=num 设置保留小数点位数

查看root所属组：#groups root


添加用户：useradd tom(其它使用默认值，使用useradd –D查看，在/etc/default/useradd下更改)    
 (-c “ xxxx”  加注释；-s /sbin/nologin 加shell；-d  /home/tom 指定家目录；-g tom 指定组；-u 指定UID)
更改用户属性：usermod –c ‘yyyy’ (参数与useradd相同)
添加密码：passwd tom(用户)   passwd –S tom(查看密码)  passwd –d tom(清除gc密码)
删除用户：userdel tom(用户)  userdel –r tom(删除用户及其家目录等)
改变用户账号及密码信息：chage(参考帮组手册)


切换用户：su tom(用户)  su – tom(切换用户，并切换到tom家目录)  su - -c ‘ifconfig’(以root身份执行命令)
给相应用户赋予相应命令权限(/etc/sudoers)：修改文件时用:visudo(tom entos(主机名)=bin/ifconfig,…(授权的命令)) 
  修改后：sudo 命令 
查看授权命令：sudo  -l


#alias -p  列举系统中的所有别名 
#alias -p | grep 'up'    列举系统中所有包含 up的别名

然而，上面这些我们创建的别名只能暂时的工作，当经过下一次系统启动后它们不再工作。
你可以像下面展示的这样在 '.bashrc' 文件中设置永久别名。
添加以后，运行下面的命令来激活：
$ source ~/.bashrc


#type  ls    type 命令来列出所有的 shell 关键字



启动、关闭防火墙
永久打开或则关闭 
chkconfig iptables on 
chkconfig iptables off 
即时生效：重启后还原 
service iptables start 
service iptables stop 
     或者： 
/etc/init.d/iptables start 
/etc/init.d/iptables stop 


 
